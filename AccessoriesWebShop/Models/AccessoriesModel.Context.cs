//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccessoriesWebShop.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class accessoriesEntities : DbContext
    {
        public accessoriesEntities()
            : base("name=accessoriesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Ad> Ads { get; set; }
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Archive> Archives { get; set; }
        public virtual DbSet<Basket> Baskets { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<AdsHistory> AdsHistories { get; set; }
        public virtual DbSet<ChangeLog> ChangeLogs { get; set; }
        public virtual DbSet<PaymentDetail> PaymentDetails { get; set; }
        public virtual DbSet<MostDiscounted> MostDiscounteds { get; set; }
        public virtual DbSet<Statistic> Statistics { get; set; }
    
        [DbFunction("accessoriesEntities", "getAdsInSubcategory")]
        public virtual IQueryable<getAdsInSubcategory_Result> getAdsInSubcategory(Nullable<int> subcategory)
        {
            var subcategoryParameter = subcategory.HasValue ?
                new ObjectParameter("subcategory", subcategory) :
                new ObjectParameter("subcategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getAdsInSubcategory_Result>("[accessoriesEntities].[getAdsInSubcategory](@subcategory)", subcategoryParameter);
        }
    
        [DbFunction("accessoriesEntities", "getSearchResults")]
        public virtual IQueryable<getSearchResults_Result> getSearchResults(string str)
        {
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getSearchResults_Result>("[accessoriesEntities].[getSearchResults](@str)", strParameter);
        }
    
        public virtual int Checkout(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Checkout", userIDParameter);
        }
    
        public virtual int Search(Nullable<int> category, string str, string filterCriteria)
        {
            var categoryParameter = category.HasValue ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(int));
    
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            var filterCriteriaParameter = filterCriteria != null ?
                new ObjectParameter("filterCriteria", filterCriteria) :
                new ObjectParameter("filterCriteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Search", categoryParameter, strParameter, filterCriteriaParameter);
        }
    
        public virtual ObjectResult<Ad> SP_Search(Nullable<int> category, string str, string filterCriteria)
        {
            var categoryParameter = category.HasValue ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(int));
    
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            var filterCriteriaParameter = filterCriteria != null ?
                new ObjectParameter("filterCriteria", filterCriteria) :
                new ObjectParameter("filterCriteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ad>("SP_Search", categoryParameter, strParameter, filterCriteriaParameter);
        }
    
        public virtual ObjectResult<Ad> SP_Search(Nullable<int> category, string str, string filterCriteria, MergeOption mergeOption)
        {
            var categoryParameter = category.HasValue ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(int));
    
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            var filterCriteriaParameter = filterCriteria != null ?
                new ObjectParameter("filterCriteria", filterCriteria) :
                new ObjectParameter("filterCriteria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ad>("SP_Search", mergeOption, categoryParameter, strParameter, filterCriteriaParameter);
        }
    }
}
